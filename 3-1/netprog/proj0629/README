*본 프로젝트는 화투로 할 수 있는 게임 "섯다"를 기반으로 제작했습니다(영화 타짜 기반).

---서버 및 클라이언트 실행 방법---
0. CLI 최소 3개 필요합니다.
1. make로 컴파일
2. server <port>로 서버 실행
3. client localhost <port> <nickname>으로 클라이언트 2개 이상 실행(더 많아도 됩니다.)
---

*서버측에선 특별히 만질 것 없음

---클라이언트 측 메인화면 커맨드 구성---
0. 게임 규칙을 출력합니다 (룰을 모르신다면 잠깐 읽어보시는 것을 추천합니다)
1. 게임 채널 1에 접속합니다(들어가면 종료 전에 나올 수 없습니다)
2. 게임 채널 2에 접속합니다(들어가면 종료 전에 나올 수 없습니다)
3. 내 정보를 출력합니다
4. 플레이어들의 칩 순위를 출력합니다
5. 서버와 연결을 종료합니다
777. (연결을 끊지않고 칩을 +100 얻는 커맨드입니다. 칩을 모두 잃었을 때 테스트를 위해서 만들었습니다.)
---

* 0번, 3번, 4번을 입력해보시고, 1번 또는 2번채널 중 하나 골라서 입장하면 됩니다.
* 한 채널에 두 플레이어가 입장하면 게임이 바로 시작됩니다.(칩 수가 10개이상일 때 입장 가능)

* 게임 시작과 동시에 각 플레이어는 하나의 숫자 카드를 받습니다. ex) < 7 ? >
* 자신의 턴인 플레이어는 화면에 자신의 턴이라고 출력됩니다. (커맨드 입력 가능, 서버에서 즉시 처리)
* 자신의 턴이 아닌 플레이어는 커맨드가 입력은 되지만 즉시 전송되어 서버에서 처리되지 않습니다.(cond_wait 상태)

---게임 플레이 화면 커맨드 구성---
/bet <숫자> : 자신의 칩을 소모하여 숫자값만큼 베팅을 진행합니다.
/die : 즉시 패배하고 게임이 종료됩니다.
---

* 각 플레이어는 상대가 베팅한 칩 수 이상으로 베팅해야합니다(더 많이 낼 수 있습니다).
* 두 플레이어가 이번 라운드에 총 베팅한 칩 수가 동일하면 다음 라운드로 진행됩니다.
* 두번째 라운드(카드 두 장을 모두 받은 상태ex) < 7 8 >)도 동일한 방식으로 베팅이 진행됩니다.
* 두번째 라운드의 베팅이 끝나면 게임 결과를 각 플레이어가 확인하고 7초 후에 게임 채널이 종료됩니다.

* 게임 종료 이후 메인 화면에서 순위를 출력해보면 게임 결과가 반영된 것을 볼 수 있습니다.


--- 아쉬운 점---
서버 코드를 보면 가독성이 많이 떨어집니다.
만들면서 추가, 수정, 삭제할 부분이 계속 생겨서 전역 변수와 뮤텍스를 마구잡이로 썼고,
바람직하지 못 한 코드가 나왔습니다.

서버와 연결을 끊으면 해당 플레이어의 정보가 모두 사라집니다.
정보를 텍스트 파일에 남기고 서버측에서 이를 읽는 방식으로 구현할 수 있을 것 같습니다.

기존 섯다룰과 다르게 족보가 없다보니 게임이 지루한 면이 있습니다.
족보를 추가하는 건  코드 라인이 길어질 뿐이지 어렵지 않을 것 같습니다.

+게임 채널 한 명만 빠져나오기 등
---

위 문제점들은 개인적으로 코드 복사해서 보완할 예정.